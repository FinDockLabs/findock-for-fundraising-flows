<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <description>Creates a recurring type of gift commitment schedule record and stores it in the RecurringGiftCmtScheduleRequest variable.</description>
        <name>CreateRecurringGiftCommitmentScheduleRecord</name>
        <label>Create Recurring Gift Commitment Schedule Record</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>manageRcrGiftCmtSchd</actionName>
        <actionType>manageRcrGiftCmtSchd</actionType>
        <faultConnector>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>giftCommitmentSchedule</name>
            <value>
                <elementReference>RecurringGiftCommitmentScheduleRequest</elementReference>
            </value>
        </inputParameters>
        <nameSegment>manageRcrGiftCmtSchd</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <actionCalls>
        <description>Calls Process Gift Commitment Invocable action after deletion of custom gift commitment schedules and gift transactions.</description>
        <name>ProcessGiftCommitment</name>
        <label>Process Gift Commitment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>processGiftCommitment</actionName>
        <actionType>processGiftCommitment</actionType>
        <faultConnector>
            <targetReference>RollBackFailedGiftTransactions</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>GiftCommitmentId</name>
            <value>
                <elementReference>GiftCommitmentId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>processGiftCommitment</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Creates or updates the custom type of gift commitment schedule record with the data specified by the user.</description>
        <name>UpsertCustomGiftCommitmentSchedule</name>
        <label>Upsert Custom Gift Commitment Schedule</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>manageCustomGiftCmtSchds</actionName>
        <actionType>manageCustomGiftCmtSchds</actionType>
        <connector>
            <targetReference>HasCustomSchedulesToDelete</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>giftCommitmentSchedules</name>
            <value>
                <elementReference>CustomGiftCommitmentScheduleComponent.customGiftCommitmentScheduleInfo</elementReference>
            </value>
        </inputParameters>
        <nameSegment>manageCustomGiftCmtSchds</nameSegment>
        <offset>0</offset>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </actionCalls>
    <apiVersion>65.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <description>Adds the ID of the current gift commitment record to the GiftCommitmentId variable.</description>
        <name>AddGiftCommitmentId</name>
        <label>Add Gift Commitment ID</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>GiftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>IterateOverGiftCommitments.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverGiftCommitments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isError to True and errorCode to InvalidCommitmentErrorCode.</description>
        <name>SetErrorVariablesInvalidGiftCommitmentId</name>
        <label>Set Error Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>InvalidCommitmentErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DisplayManageScheduleError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isError to True and errorCode to InvalidRecordIdErrorCode.</description>
        <name>SetErrorVariablesInvalidRecordId</name>
        <label>Set Error Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>InvalidRecordIdErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayManageScheduleError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets donorHasNoCommitmentError to True.</description>
        <name>SetErrorVariablesNoGiftCommitments</name>
        <label>Set Error Variable</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>donorHasNoCommitmentError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DisplayManageScheduleError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets SetErrorVariablesNoneScheduleType to True.</description>
        <name>SetErrorVariablesNoneScheduleType</name>
        <label>Set Error Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>NoneScheduleTypeErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayManageScheduleError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>SetsIsPausedGiftCommitmentSchedulesError</description>
        <name>SetErrorVariablesPausedGiftCommitmentSchedules</name>
        <label>Set Error Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>IsPausedGiftCommitmentSchedulesError</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DisplayManageScheduleError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets isError to True and errorCode to UnchangedCustomScheduleErrorCode.</description>
        <name>SetErrorVariablesUnchangedCustomGiftCmtSchdError</name>
        <label>Set Error Variables</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>UnchangedCustomScheduleErrorCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayManageScheduleError</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets new fields for a custom gift commitment schedule in the CustomGiftCmtSchdFields variable based on the values provided by the user.</description>
        <name>SetFieldsforCustomGiftCommitmentSchedule</name>
        <label>Set Fields for Custom Gift Commitment Schedule</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>CustomGiftCommitmentScheduleFields</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>CampaignId</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateCustomGiftCommitmentSchedule</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets CommitmentCount to the number of records in the GiftCommitments from GetGiftCommitments variable.</description>
        <name>SetGiftCommitmentCount</name>
        <label>Set Gift Commitment Count</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>GiftCommitmentCount</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>GetGiftCommitments</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>WhatCountOfGiftCommitments</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets giftCommitmentId to the ID stored in the recordId variable.</description>
        <name>SetGiftCommitmentId</name>
        <label>Set Gift Commitment ID</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>GiftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetGiftCmtFromGiftCommitmentId</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the gift commitment schedule values of the  RecurringGiftCmtScheduleRequest variable to the values specified in the CollectRecurringGiftComitSchdDetailsScreen element.</description>
        <name>SetRecurringGiftCommitmentScheduleValues</name>
        <label>Set Recurring Gift Commitment Schedule Values</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.TransactionPeriod</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionPeriodPicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.TransactionInterval</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionInterval</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.TransactionAmount</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionAmount</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.TransactionDay</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GiftTransactionDayPicklist</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.CampaignId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CampaignLookup.recordId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.StartDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>StartDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.EndDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>EndDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.GiftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetGiftCmtFromGiftCommitmentId.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>RecurringGiftCommitmentScheduleRequest.OutreachSourceCodeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OutreachSourceCodeLookup.recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateRecurringGiftCommitmentScheduleRecord</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets giftCommitmentId to the first gift commitment record in GetGiftCommitments.</description>
        <name>SetSelectedGiftCommitmentId</name>
        <label>Set Selected Gift Commitment ID</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignmentItems>
            <assignToReference>GiftCommitmentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SelectGiftCommitmentDataTable.firstSelectedRow.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>GetGiftCmtFromGiftCommitmentId</targetReference>
        </connector>
    </assignments>
    <constants>
        <description>Stores the ID prefix for an account record.</description>
        <name>AccountIdPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>001</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the ID prefix for a gift commitment record.</description>
        <name>GiftCommitmentIdPrefix</name>
        <dataType>String</dataType>
        <value>
            <stringValue>6gc</stringValue>
        </value>
    </constants>
    <constants>
        <description>Stores the action to upgrade downgrade of a recurring gift commitment schedule.</description>
        <name>UpgradeDowngradeAction</name>
        <dataType>String</dataType>
        <value>
            <stringValue>UpgradeDowngrade</stringValue>
        </value>
    </constants>
    <customProperties>
        <name>ScreenProgressIndicator</name>
        <value>
            <stringValue>{&quot;location&quot;:&quot;top&quot;,&quot;type&quot;:&quot;simple&quot;}</stringValue>
        </value>
    </customProperties>
    <decisions>
        <description>Determines whether the user wants to create or update a custom gift commitment schedule.</description>
        <name>CreateOrUpdateCustomGiftCommitmentSchedule</name>
        <label>Create or Update Custom Gift Commitment Schedule?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SetErrorVariablesUnchangedCustomGiftCmtSchdError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>None (Default)</defaultConnectorLabel>
        <rules>
            <name>CreateCustomSchedule</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.customGiftCommitmentScheduleInfo</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.paymentInstrumentInfo</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpsertCustomGiftCommitmentSchedule</targetReference>
            </connector>
            <label>Create Custom Schedule</label>
        </rules>
        <rules>
            <name>UpdateCustomSchedule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteGiftCommitmentTransactions</targetReference>
            </connector>
            <label>Update Custom Schedule</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the user wants to delete any custom schedules.</description>
        <name>HasCustomSchedulesToDelete</name>
        <label>Has Custom Schedules to Delete?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>HasCustomSchedulesForDeletion</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <isGoTo>true</isGoTo>
                <targetReference>DeleteGiftCommitmentTransactions</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the gift commitment record is valid and has the schedule type as None.</description>
        <name>IsGiftCommitmentValid</name>
        <label>Is Gift Commitment Valid?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>GetGiftCommitmentSchedules</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>InvalidGiftCommitment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesInvalidGiftCommitmentId</targetReference>
            </connector>
            <label>No</label>
        </rules>
        <rules>
            <name>YesScheduleTypeNone</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesNoneScheduleType</targetReference>
            </connector>
            <label>Yes, Schedule Type None</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether giftCommitmentCount or GiftCommitments from GetGiftCommitments is greater than 0.</description>
        <name>WhatCountOfGiftCommitments</name>
        <label>What’s the Count of Gift Commitments?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SelectGiftCommitmentScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>More than One Commitment (Default)</defaultConnectorLabel>
        <rules>
            <name>HasNoGiftCommitments</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GiftCommitmentCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCommitments</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesNoGiftCommitments</targetReference>
            </connector>
            <label>No Commitment</label>
        </rules>
        <rules>
            <name>HasOneGiftCommitment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GiftCommitmentCount</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateOverGiftCommitments</targetReference>
            </connector>
            <label>One Commitment</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether there are any gift commitment schedules of type custom or recurring. Also, determines whether the recurring schedules are paused.</description>
        <name>WhatTypeOfGiftCommitmentSchedules</name>
        <label>What Type of Gift Commitment Schedules?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SetFieldsforCustomGiftCommitmentSchedule</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Custom</defaultConnectorLabel>
        <rules>
            <name>Recurring</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftCommitmentSchedules</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recurring</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Recurring_Gift_Commitment_Schedule_FinDock</targetReference>
            </connector>
            <label>Recurring</label>
        </rules>
        <rules>
            <name>OnlyPausedRecurring</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPausedGiftCommitmentSchedules</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recurring</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetErrorVariablesPausedGiftCommitmentSchedules</targetReference>
            </connector>
            <label>Only Paused Recurring</label>
        </rules>
        <rules>
            <name>NoRecurringSchedule</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetGiftCommitmentSchedules</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetGiftCmtFromGiftCommitmentId.ScheduleType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Recurring</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateRecurringGiftCommitmentScheduleScreen</targetReference>
            </connector>
            <label>No Recurring Schedule</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the record ID that&apos;s passed into the flow is a donor ID, gift commitment ID, or other ID.</description>
        <name>WhatTypeOfId</name>
        <label>What type of ID?</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnector>
            <targetReference>SetErrorVariablesInvalidRecordId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other (Default)</defaultConnectorLabel>
        <rules>
            <name>IsDonor</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>AccountIdPrefix</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetGiftCommitments</targetReference>
            </connector>
            <label>Donor</label>
        </rules>
        <rules>
            <name>IsGiftCommitment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>GiftCommitmentIdPrefix</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetGiftCommitmentId</targetReference>
            </connector>
            <label>Gift Commitment</label>
        </rules>
    </decisions>
    <description>Creates and updates custom Gift Commitment Schedules that are recurring.</description>
    <dynamicChoiceSets>
        <description>Stores all the payment methods for the gift transactions associated with the gift commitment object. These payment methods are used as options for PaymentMethodPicklist on CollectRecurringGiftComitSchdDetailsScreen.</description>
        <name>PaymentMethodPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>PaymentMethod</picklistField>
        <picklistObject>GiftCommitmentSchedule</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>Stores numbers that indicate the days of a month for a monthly transaction period for a gift commitment schedule object. These numbers are used as options for GiftTransactionDayPicklist on CollectRecurringGiftComitSchdDetailsScreen.</description>
        <name>TransactionDayPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>TransactionDay</picklistField>
        <picklistObject>GiftCommitmentSchedule</picklistObject>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <description>Stores all the transaction period values for a gift commitment schedule object to use as options for GiftTransactionPeriodPicklist on CollectRecurringGiftComitSchdDetailsScreen.</description>
        <name>TransactionPeriodPicklistChoiceSet</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>TransactionPeriod</picklistField>
        <picklistObject>GiftCommitmentSchedule</picklistObject>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <description>Returns true if EndDate is on or after the StartDate, else returns false.</description>
        <name>ValidateEndDateFormula</name>
        <dataType>Boolean</dataType>
        <expression>IF(({!StartDate}&gt;{!EndDate}), false, true)</expression>
    </formulas>
    <formulas>
        <description>Returns true if GiftTransactionAmount is greater than equal to one, else returns false.</description>
        <name>ValidateGiftTransactionAmountFormula</name>
        <dataType>Boolean</dataType>
        <expression>IF(({!GiftTransactionAmount})&lt;1, false, true)</expression>
    </formulas>
    <interviewLabel>Manage Gift Commitment Schedules {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Manage Gift Commitment Schedules</label>
    <loops>
        <description>Repeats actions in a loop for each gift commitment record in the GiftCommitments from GetGiftCommitments variable.</description>
        <name>IterateOverGiftCommitments</name>
        <label>Iterate Over Gift Commitments</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <collectionReference>GetGiftCommitments</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddGiftCommitmentId</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <isGoTo>true</isGoTo>
            <targetReference>GetGiftCmtFromGiftCommitmentId</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordDeletes>
        <description>Deletes the custom gift commitment schedules after deleting the associated gift transactions for the schedules that are specified for deletion.</description>
        <name>DeleteCustomGiftCommitmentSchedules</name>
        <label>Delete Custom Gift Commitment Schedules</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ProcessGiftCommitment</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>RollBackFailedGiftTransactions</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</elementReference>
            </value>
        </filters>
        <object>GiftCommitmentSchedule</object>
    </recordDeletes>
    <recordDeletes>
        <description>Deletes gift commitment transaction records for the custom schedules that are specified for deletion.</description>
        <name>DeleteGiftCommitmentTransactions</name>
        <label>Delete Gift Commitment Transactions</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>DeleteCustomGiftCommitmentSchedules</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DeleteCustomGiftCommitmentSchedules</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GiftCommitmentScheduleId</field>
            <operator>In</operator>
            <value>
                <elementReference>CustomGiftCommitmentScheduleComponent.deletedGiftCommitmentScheduleIdList</elementReference>
            </value>
        </filters>
        <object>GiftTransaction</object>
    </recordDeletes>
    <recordLookups>
        <description>Gets the gift commitment record with an ID that matches the ID in the GiftCommitmentId variable.</description>
        <name>GetGiftCmtFromGiftCommitmentId</name>
        <label>Get Gift Commitment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsGiftCommitmentValid</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3 OR 4)</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GiftCommitmentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paused</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GiftCommitment</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the active, draft, and paused gift commitment records with a donor ID that matches the recordId. Stores the results in the GiftCommitments from GetGiftCommitments record collection.</description>
        <name>GetGiftCommitments</name>
        <label>Get Gift Commitments</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SetGiftCommitmentCount</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3 OR 4) AND 5</filterLogic>
        <filters>
            <field>DonorId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Draft</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Paused</stringValue>
            </value>
        </filters>
        <filters>
            <field>ScheduleType</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GiftCommitment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets ongoing and future gift commitment schedule records with type CreateTransactions, and an ID that matches the GiftCommitmentId.</description>
        <name>GetGiftCommitmentSchedules</name>
        <label>Get Gift Commitment Schedules</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetPausedGiftCommitmentSchedules</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>GiftCommitmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GiftCommitmentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>CreateTransactions</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GiftCommitmentSchedule</object>
        <sortField>StartDate</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets gift commitment schedule records with the type PauseTransactions, and an ID that matches the GiftCommitmentId.</description>
        <name>GetPausedGiftCommitmentSchedules</name>
        <label>Get Paused Gift Commitment Schedules</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>WhatTypeOfGiftCommitmentSchedules</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </faultConnector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>GiftCommitmentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GiftCommitmentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>$Flow.CurrentDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>PauseTransactions</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GiftCommitmentSchedule</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordRollbacks>
        <description>Rolls back all the deleted gift transaction records when the deletion of the custom gift commitment schedule fails.</description>
        <name>RollBackFailedGiftTransactions</name>
        <label>Roll Back Failed Gift Transactions</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>DisplayFaultErrorManageScheduleScreen</targetReference>
        </connector>
    </recordRollbacks>
    <screens>
        <description>Allows the flow user to create a custom gift commitment schedule when gift commitment schedules with custom schedule type were found for the gift commitment with GiftCommitmentId.</description>
        <name>CreateCustomGiftCommitmentSchedule</name>
        <label>Create Custom Gift Commitment Schedule</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>CreateOrUpdateCustomGiftCommitmentSchedule</targetReference>
        </connector>
        <fields>
            <name>CreateCustomGiftCommitmentScheduleScreenHeader</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-size: 24px;&quot;&gt;Create Custom Gift Commitment Schedules&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CustomGiftCmtInformationSection</name>
            <fieldText>Gift Commitment Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CustomGiftCmtInformationSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomGiftCommitmentNameText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Gift Commitment Name&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CustomGiftCmtInformationSection_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomExpectedTotalGiftCmtAmountDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Expected Total Gift Commitment Amount&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedTotalCmtAmount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>CustomGiftCmtInformationSection_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomExpectedGiftCmtEndDateDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Gift Commitment Expected End Date&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedEndDate}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>CreateCustomGiftCmtSchdLabelDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em style=&quot;font-size: 13px;&quot;&gt;Create a custom Gift Commitment Schedule. A custom Gift Commitment Schedule creates one Gift Transaction with the due date that&apos;s the same as the start date of the schedule.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CustomMultiCurrencyInfoDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em&gt;The currency of the transaction amount matches the currency in the associated gift commitment record.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CustomGiftCommitmentScheduleInformationSection</name>
            <fieldText>Gift Commitment Schedule Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>CustomGiftCommitmentScheduleInformationSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>CustomGiftCommitmentScheduleComponent</name>
                    <dataTypeMappings>
                        <typeName>T</typeName>
                        <typeValue>GiftCommitmentSchedule</typeValue>
                    </dataTypeMappings>
                    <extensionName>runtime_industries_frops:customSchedule</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>giftCommitmentID</name>
                        <value>
                            <elementReference>GiftCommitmentId</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>additionalFields</name>
                        <value>
                            <elementReference>CustomGiftCommitmentScheduleFields</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Confirm And Save</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Allows the flow user to create a recurring gift commitment schedule when no active or paused gift commitment schedules were found for the gift commitment with the GiftCommitmentId.</description>
        <name>CreateRecurringGiftCommitmentScheduleScreen</name>
        <label>Create Recurring Gift Commitment Schedule</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetRecurringGiftCommitmentScheduleValues</targetReference>
        </connector>
        <fields>
            <name>CreateRecurringGiftCommitmentScheduleScreenHeader</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-size: 24px;&quot;&gt;Create Recurring Gift Commitment Schedule&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>CreateRecurringGiftCommitmentScheduleDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Create a recurring Gift Commitment Schedule.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>RecurringMultiCurrencyInfoDisplayText</name>
            <fieldText>&lt;p&gt;&lt;em&gt;The currency of the transaction amount matches the currency in the associated gift commitment record.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>GiftCommitmentInformationSection</name>
            <fieldText>Gift Commitment Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>GiftCommitmentInformationSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>GiftCommitmentNameText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Gift Commitment Name&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255);&quot;&gt;﻿&lt;/span&gt;&lt;strong style=&quot;font-size: 12px;&quot;&gt;{!GetGiftCmtFromGiftCommitmentId.Name}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>GiftCommitmentInformationSection_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ExpectedTotalGiftCmtAmountDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Expected Total Gift Commitment Amount&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedTotalCmtAmount}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>GiftCommitmentInformationSection_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>ExpectedGiftCommitmentEndDateDisplayText</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;Gift Commitment Expected End Date&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;{!GetGiftCmtFromGiftCommitmentId.ExpectedEndDate}&lt;/strong&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>SetRecurringGiftCommitmentScheduleInformation</name>
            <fieldText>Set Recurring Gift Commitment Schedule Information</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>SetRecurringGiftCommitmentScheduleInformation_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>StartDate</name>
                    <dataType>Date</dataType>
                    <defaultValue>
                        <elementReference>$Flow.CurrentDate</elementReference>
                    </defaultValue>
                    <fieldText>Start Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>GiftTransactionPeriodPicklist</name>
                    <choiceReferences>TransactionPeriodPicklistChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>Monthly</stringValue>
                    </defaultValue>
                    <fieldText>Gift Transaction Period</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <helpText>&lt;p&gt;Select the period for which the Gift Commitment Schedule is run. You must select from one of these transaction periods: Daily, Monthly, Weekly, Yearly.&lt;/p&gt;</helpText>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>GiftTransactionAmount</name>
                    <dataType>Currency</dataType>
                    <fieldText>Gift Transaction Amount</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <scale>2</scale>
                    <validationRule>
                        <errorMessage>Enter an amount that&apos;s greater than 0.</errorMessage>
                        <formulaExpression>{!ValidateGiftTransactionAmountFormula}</formulaExpression>
                    </validationRule>
                </fields>
                <fields>
                    <name>OutreachSourceCodeLookup</name>
                    <extensionName>flowruntime:lookup</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>fieldApiName</name>
                        <value>
                            <stringValue>OutreachSourceCodeId</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>Source Code</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>objectApiName</name>
                        <value>
                            <stringValue>GiftCommitmentSchedule</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>maxValues</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>recordId</name>
                        <value>
                            <stringValue>GiftCommitmentSchedule.OutreachSourceCodeId</stringValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>SetRecurringGiftCommitmentScheduleInformation_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>EndDate</name>
                    <dataType>Date</dataType>
                    <fieldText>End Date</fieldText>
                    <fieldType>InputField</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <validationRule>
                        <errorMessage>Select an EndDate that’s on or after the StartDate.</errorMessage>
                        <formulaExpression>{!ValidateEndDateFormula}</formulaExpression>
                    </validationRule>
                </fields>
                <fields>
                    <name>GiftTransactionInterval</name>
                    <dataType>Number</dataType>
                    <defaultValue>
                        <numberValue>1.0</numberValue>
                    </defaultValue>
                    <fieldText>Gift Transaction Interval</fieldText>
                    <fieldType>InputField</fieldType>
                    <helpText>&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Enter the interval of running the gift commitment schedule. The gift transaction period and interval define how the schedule is run. For example, if the gift transaction period is monthly and the gift transaction interval is 3, the schedule is run every three months.&lt;/span&gt;&lt;/p&gt;</helpText>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <scale>0</scale>
                </fields>
                <fields>
                    <name>GiftTransactionDayPicklist</name>
                    <choiceReferences>TransactionDayPicklistChoiceSet</choiceReferences>
                    <dataType>String</dataType>
                    <defaultValue>
                        <stringValue>1</stringValue>
                    </defaultValue>
                    <fieldText>Gift Transaction Day</fieldText>
                    <fieldType>DropdownBox</fieldType>
                    <helpText>&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;Select a day to create a gift transaction for a monthly transaction period in the future. If you select 29 or 30, the gift transaction will be created on the last day of the month that doesn&apos;t have the selected number of days. This field is applicable only when you select Monthly in GiftTransactionPeriod.&lt;/span&gt;&lt;/p&gt;</helpText>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                </fields>
                <fields>
                    <name>CampaignLookup</name>
                    <extensionName>flowruntime:lookup</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>objectApiName</name>
                        <value>
                            <stringValue>GiftCommitmentSchedule</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>Campaign</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>fieldApiName</name>
                        <value>
                            <stringValue>CampaignId</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>maxValues</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>recordId</name>
                        <value>
                            <elementReference>GetGiftCmtFromGiftCommitmentId.CampaignId</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <fields>
            <name>FinDock</name>
            <fieldText>FinDock</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>FinDock_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCommitmentScheduleRequest.fdff__Payment_Method__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCommitmentScheduleRequest.fdff__Payment_Processor__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCommitmentScheduleRequest.fdff__Target__c</objectFieldReference>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>FinDock_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCommitmentScheduleRequest.fdff__Payment_Profile__c</objectFieldReference>
                </fields>
                <fields>
                    <fieldType>ObjectProvided</fieldType>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>false</isRequired>
                    <objectFieldReference>RecurringGiftCommitmentScheduleRequest.fdff__Mandate__c</objectFieldReference>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>6</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <nextOrFinishButtonLabel>Confirm And Save</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Displays a message to the flow user when the system can’t get a gift commitment or gift commitment schedule records, roll back gift transaction, or create gift commitment schedule record.</description>
        <name>DisplayFaultErrorManageScheduleScreen</name>
        <label>Display Error</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>ManageScheduleErrorDisplayText</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(234, 0, 30);&quot;&gt;{!$Flow.FaultMessage}&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Displays a message to the flow user when there’s an error updating the gift commitment schedules.</description>
        <name>DisplayManageScheduleError</name>
        <label>Display Error</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>NoScheduleChangeErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;background-color: rgb(255, 255, 255); color: rgb(234, 0, 30);&quot;&gt;Looks like you didn’t add or edit any values in the custom schedule. Specify the values and try again.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>UnchangedCustomScheduleErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvalidRecordIdErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;The specified ID is neither a donor ID nor a Gift Commitment ID. Specify a valid ID and try again.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>InvalidRecordIdErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvalidCommitmentStatusErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;You can’t edit the schedule because the status of the associated Gift Commitment is Lapsed, Failing, or Closed.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>InvalidCommitmentErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>InvalidGiftCommitmentForDonorErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;background-color: rgb(255, 255, 255); color: rgb(234, 0, 30);&quot;&gt;We couldn’t process the request because the status of the associated Gift Commitment is Lapsed, Failing, or Closed, and the schedule type is None or not set.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>donorHasNoCommitmentError</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>NoneScheduleTypeSetErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;We couldn’t process the request because the schedule type of the associated Gift Commitment is either not set or set to None.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>NoneScheduleTypeErrorCode</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>OnlyPausedSchduleErrorDisplayText</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;em style=&quot;color: rgb(234, 0, 30); background-color: rgb(255, 255, 255);&quot;&gt;We couldn’t process the request because the Gift Commitment has only paused schedules. Resume at least one of the paused schedules and try again.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>IsPausedGiftCommitmentSchedulesError</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <nextOrFinishButtonLabel>Close</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <description>Allows the flow user to select a gift commitment from the available list stored in the GiftCommitments from GetGiftCommitments record collection.</description>
        <name>SelectGiftCommitmentScreen</name>
        <label>Select Gift Commitment</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SetSelectedGiftCommitmentId</targetReference>
        </connector>
        <fields>
            <name>AvailableGiftCommitmentsSection</name>
            <fieldText>Available Gift Commitments</fieldText>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>AvailableGiftCommitmentsSection_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>availableCommitmentsInfo</name>
                    <fieldText>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;em style=&quot;font-size: 13px;&quot;&gt;Only the gift commitments that are in Active, Draft, or Paused state are displayed.&lt;/em&gt;&lt;/p&gt;</fieldText>
                    <fieldType>DisplayText</fieldType>
                </fields>
                <fields>
                    <name>SelectGiftCommitmentDataTable</name>
                    <dataTypeMappings>
                        <typeName>T</typeName>
                        <typeValue>GiftCommitment</typeValue>
                    </dataTypeMappings>
                    <extensionName>flowruntime:datatable</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>label</name>
                        <value>
                            <stringValue>Select Gift Commitment</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>selectionMode</name>
                        <value>
                            <stringValue>SINGLE_SELECT</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>minRowSelection</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>tableData</name>
                        <value>
                            <elementReference>GetGiftCommitments</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>columns</name>
                        <value>
                            <stringValue>[{&quot;apiName&quot;:&quot;Name&quot;,&quot;guid&quot;:&quot;column-a819&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentName&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:0,&quot;label&quot;:&quot;Name&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;Status&quot;,&quot;guid&quot;:&quot;column-2f1a&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentStatus&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:1,&quot;label&quot;:&quot;Status&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;ScheduleType&quot;,&quot;guid&quot;:&quot;column-117f&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentScheduleType&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:2,&quot;label&quot;:&quot;Schedule Type&quot;,&quot;type&quot;:&quot;text&quot;},{&quot;apiName&quot;:&quot;CreatedDate&quot;,&quot;guid&quot;:&quot;column-d88d&quot;,&quot;editable&quot;:false,&quot;hasCustomHeaderLabel&quot;:false,&quot;customHeaderLabel&quot;:&quot;$Label.ManageGiftCommitmentScheduleFlow.commitmentDate&quot;,&quot;wrapText&quot;:true,&quot;order&quot;:3,&quot;label&quot;:&quot;Created Date&quot;,&quot;type&quot;:&quot;customDateTime&quot;}]</stringValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>maxRowSelection</name>
                        <value>
                            <numberValue>1.0</numberValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>shouldDisplayLabel</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>selectedRows</name>
                        <value>
                            <elementReference>GetGiftCommitments</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithHeader</regionContainerType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <sourceTemplate>frops_flow__ManageGiftCmtSchedule</sourceTemplate>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>WhatTypeOfId</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Updates the gift commitment schedule records that aren’t paused.</description>
        <name>Update_Recurring_Gift_Commitment_Schedule_FinDock</name>
        <label>Update Recurring Gift Commitment Schedules</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <flowName>Update_Recurring_Gift_Commitment_Schedule_FinDock</flowName>
        <inputAssignments>
            <name>action</name>
            <value>
                <elementReference>UpgradeDowngradeAction</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>recordId</name>
            <value>
                <elementReference>GiftCommitmentId</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <variables>
        <description>Stores the custom field values that are provided by the flow user.</description>
        <name>CustomGiftCommitmentScheduleFields</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores a boolean value that indicates whether the flow ended because the donor doesn’t have a recurring or custom gift commitment with active, draft, or paused status.</description>
        <name>donorHasNoCommitmentError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Variable errorMessage</description>
        <name>errorMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the count of records in the GiftCommitments from GetGiftCommitments variable.</description>
        <name>GiftCommitmentCount</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the ID of the gift commitment record fetched by GetGiftCommitments.</description>
        <name>GiftCommitmentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the validation error code that&apos;s displayed when the giftCommitmentId belongs to an invalid gift commitment.</description>
        <name>InvalidCommitmentErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the validation error code that’s displayed when recordId isn&apos;t a donor record ID or a gift commitment record ID.</description>
        <name>InvalidRecordIdErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the validation error code that’s displayed when only paused gift commitment schedule records with an ID matching the GiftCommitmentId were found.</description>
        <name>IsPausedGiftCommitmentSchedulesError</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the validation error code that’s displayed when the schedule type of the gift commitment is None.</description>
        <name>NoneScheduleTypeErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <description>Stores the ID of a donor or gift commitment record that&apos;s passed into the flow.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the recurring gift commitment schedule data provided by the user.</description>
        <name>RecurringGiftCommitmentScheduleRequest</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>GiftCommitmentSchedule</objectType>
    </variables>
    <variables>
        <description>Stores the validation error code that’s displayed when the flow user doesn’t make any changes to the custom gift commitment schedule.</description>
        <name>UnchangedCustomScheduleErrorCode</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>